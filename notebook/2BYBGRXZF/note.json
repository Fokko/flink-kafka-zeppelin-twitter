{
  "paragraphs": [
    {
      "text": "%md\n# Streaming example\n\nInspired by: \n* https://github.com/mbalassi/flink/blob/stockprices/flink-staging/flink-streaming/flink-streaming-examples/src/main/scala/org/apache/flink/streaming/scala/examples/windowing/StockPrices.scala\n* https://github.com/apache/flink/blob/master/flink-examples/flink-examples-streaming/src/main/scala/org/apache/flink/streaming/scala/examples/windowing/TopSpeedWindowing.scala\n\nInteresting links:\n* https://flink.apache.org/news/2015/12/04/Introducing-windows.html\n* http://flink.apache.org/news/2015/02/09/streaming-example.html",
      "dateUpdated": "Sep 30, 2016 7:45:10 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "tableHide": false,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1474917635382_1140194376",
      "id": "20160926-192035_79968079",
      "dateCreated": "Sep 26, 2016 7:20:35 AM",
      "dateStarted": "Sep 30, 2016 7:45:10 AM",
      "dateFinished": "Sep 30, 2016 7:45:10 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%flink\n\n\nimport java.util.concurrent.TimeUnit._\nimport scala.util.Random\n\nimport org.apache.flink.streaming.api.scala._\nimport org.apache.flink.streaming.api.functions.source.SourceFunction\nimport org.apache.flink.streaming.api.functions.source.SourceFunction.SourceContext\nimport org.apache.flink.streaming.api.functions.windowing.delta.DeltaFunction\nimport org.apache.flink.streaming.api.windowing.assigners.GlobalWindows\nimport org.apache.flink.streaming.api.windowing.assigners.SlidingEventTimeWindows\nimport org.apache.flink.streaming.api.windowing.evictors.TimeEvictor\nimport org.apache.flink.streaming.api.windowing.triggers.DeltaTrigger\n\nimport org.apache.flink.streaming.api.functions.windowing.WindowFunction\nimport org.apache.flink.streaming.api.windowing.windows.Window\nimport org.apache.flink.streaming.api.windowing.windows.TimeWindow\n\nimport org.apache.flink.streaming.api.functions.sink.SocketClientSink\nimport org.apache.flink.streaming.util.serialization.{SimpleStringSchema, SerializationSchema}\nimport org.apache.flink.streaming.api.windowing.assigners.SlidingProcessingTimeWindows\n\nimport org.apache.flink.streaming.api.TimeCharacteristic\n\nimport org.apache.flink.util.Collector\n\nimport java.beans.Transient\nimport java.util.concurrent.TimeUnit\n\nimport org.apache.flink.streaming.util.serialization.SimpleStringSchema",
      "dateUpdated": "Sep 30, 2016 8:05:10 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1474918037442_-1066541425",
      "id": "20160926-192717_1822872061",
      "dateCreated": "Sep 26, 2016 7:27:17 AM",
      "dateStarted": "Sep 30, 2016 8:05:11 AM",
      "dateFinished": "Sep 30, 2016 8:05:21 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%flink\n\nval zeppelin \u003d \"zeppelin\"\nval NEWLINE \u003d 0x0A.toByte\nval TAB \u003d 0x09.toByte\n\ncase class StockPrice(symbol: String, price: Double, eventTime: Long)\n\nval symbols \u003d List(\"SPX\", \"FTSE\", \"DJI\", \"DJT\", \"BUX\", \"DAX\", \"GOOG\", \"AAPL\", \"FB\")\n\nsenv.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n",
      "dateUpdated": "Sep 30, 2016 8:05:12 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1474904848557_865038810",
      "id": "20160926-154728_1642612121",
      "dateCreated": "Sep 26, 2016 3:47:28 AM",
      "dateStarted": "Sep 30, 2016 8:05:12 AM",
      "dateFinished": "Sep 30, 2016 8:05:23 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n![Ingestion](https://ci.apache.org/projects/flink/flink-docs-master/fig/times_clocks.svg)\n",
      "dateUpdated": "Sep 30, 2016 7:45:10 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475220000636_1533165748",
      "id": "20160930-072000_521455153",
      "dateCreated": "Sep 30, 2016 7:20:00 AM",
      "dateStarted": "Sep 30, 2016 7:45:10 AM",
      "dateFinished": "Sep 30, 2016 7:45:10 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%flink\n\nclass StockSourceFunction(symbol: String, basePrice: Double, sigma: Int) extends SourceFunction[StockPrice]() {\n  var price \u003d basePrice\n  @Transient lazy val rand \u003d new Random()\n\n  var isRunning:Boolean \u003d true\n\n  override def run(ctx: SourceContext[StockPrice]) \u003d {\n    while (isRunning) {\n        val rnd \u003d Random.nextGaussian\n        \n        price \u003d if(price + rnd * sigma \u003c 0) \n            price + rnd * sigma * -1 // Make it positive as we don\u0027t want any negative prices :-)\n        else \n            price + rnd * sigma\n            \n            \n        Thread.sleep(Random.nextInt(200))\n        \n        val stock \u003d StockPrice(symbol, price, System.currentTimeMillis)\n        \n        ctx.collect(stock)\n    }\n  }\n\n  override def cancel(): Unit \u003d isRunning \u003d false\n}\n\nval stockStream \u003d senv.addSource(new StockSourceFunction(\"SPX\", 20, 10)).union(\n    senv.addSource(new StockSourceFunction(\"FTSE\", 50, 20)),\n    senv.addSource(new StockSourceFunction(\"GOOG\", 100, 30)),\n    senv.addSource(new StockSourceFunction(\"FB\", 42, 22)),\n    senv.addSource(new StockSourceFunction(\"AAPL\", 140, 40))\n).assignAscendingTimestamps( _.eventTime )",
      "dateUpdated": "Sep 30, 2016 8:05:14 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1474920009779_-1429478189",
      "id": "20160926-200009_1188601262",
      "dateCreated": "Sep 26, 2016 8:00:09 AM",
      "dateStarted": "Sep 30, 2016 8:05:21 AM",
      "dateFinished": "Sep 30, 2016 8:05:25 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n# Window functions\n\n\n\n![https://flink.apache.org/news/2015/12/04/Introducing-windows.html](https://flink.apache.org/img/blog/window-intro/window-sliding-window.png)\n\n\n\nMore information at:\n* https://ci.apache.org/projects/flink/flink-docs-master/api/java/org/apache/flink/streaming/api/functions/windowing/WindowFunction.html\n* https://ci.apache.org/projects/flink/flink-docs-release-1.1/apis/streaming/windows.html\n* https://www.mapr.com/blog/essential-guide-streaming-first-processing-apache-flink\n* https://flink.apache.org/news/2015/12/04/Introducing-windows.html",
      "dateUpdated": "Sep 30, 2016 7:45:10 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1474930918473_850173173",
      "id": "20160926-230158_1496546499",
      "dateCreated": "Sep 26, 2016 11:01:58 AM",
      "dateStarted": "Sep 30, 2016 7:45:10 AM",
      "dateFinished": "Sep 30, 2016 7:45:10 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\n\nrm /tmp/output\necho -e \u0027Symbol\\tRecieved\\tValue\\n\u0027 \u003e /tmp/output\n\nnetcat -l 4444 \u003e\u003e /tmp/output\n",
      "dateUpdated": "Sep 30, 2016 8:05:16 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "lineChart",
          "height": 444.0,
          "optionOpen": true,
          "keys": [
            {
              "name": "Recieved",
              "index": 1.0,
              "aggr": "sum",
              "$$hashKey": "object:1252"
            }
          ],
          "values": [
            {
              "name": "Value",
              "index": 2.0,
              "aggr": "sum",
              "$$hashKey": "object:1258"
            }
          ],
          "groups": [
            {
              "name": "Symbol",
              "index": 0.0,
              "aggr": "sum",
              "$$hashKey": "object:1255"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "Symbol",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "Recieved",
              "index": 1.0,
              "aggr": "sum"
            }
          },
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "helium": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1474925357864_559338063",
      "id": "20160926-212917_929958945",
      "dateCreated": "Sep 26, 2016 9:29:17 AM",
      "dateStarted": "Sep 30, 2016 8:05:17 AM",
      "dateFinished": "Sep 30, 2016 8:05:00 AM",
      "status": "ABORT",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%flink\n\nval schema: SerializationSchema[StockPrice] \u003d new SerializationSchema[StockPrice]() {\n    override def serialize(sp: StockPrice): Array[Byte] \u003d {\n        val tempString \u003d sp.symbol + \"\\t\" + sp.eventTime.toString + \"\\t\" + sp.price.toString + \"\\n\"\n        tempString.getBytes()\n    }\n}\n\ndef sumTuple(x: (Double, Int), y: (Double, Int)): (Double, Int) \u003d (x._1 + y._1, x._2 + y._2)\n\nstockStream\n    .keyBy(_.symbol)\n    .window(SlidingProcessingTimeWindows.of(Time.seconds(10), Time.seconds(5)))\n    .apply { (\n        key: String,\n        window: TimeWindow,\n        stockPrices: Iterable[StockPrice],\n        out: Collector[StockPrice]) \u003d\u003e {\n            val (total, count) \u003d stockPrices.map(sp \u003d\u003e (sp.price, 1)).reduceLeft(sumTuple)\n            out.collect( StockPrice(key, total / count.toDouble, window.getEnd ) )\n        }\n    }.writeToSocket(zeppelin, 4444, schema)\n\nsenv.execute(\"SimpleStockStreamer\")\n",
      "dateUpdated": "Sep 30, 2016 8:05:18 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1474922706423_-392518083",
      "id": "20160926-204506_1721471931",
      "dateCreated": "Sep 26, 2016 8:45:06 AM",
      "dateStarted": "Sep 30, 2016 8:05:24 AM",
      "dateFinished": "Sep 30, 2016 8:05:02 AM",
      "status": "ABORT",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh \necho -e \"%table\"\ncat /tmp/output",
      "dateUpdated": "Sep 30, 2016 8:08:57 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "lineChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Recieved",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "Value",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [
            {
              "name": "Symbol",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "Symbol",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "Recieved",
              "index": 1.0,
              "aggr": "sum"
            }
          },
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "helium": {},
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1474970581508_-613742270",
      "id": "20160927-100301_569017320",
      "dateCreated": "Sep 27, 2016 10:03:01 AM",
      "dateStarted": "Sep 30, 2016 8:08:57 AM",
      "dateFinished": "Sep 30, 2016 8:08:57 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\n\nrm /tmp/output\necho -e \u0027Symbol\\tRecieved\\tValue\\n\u0027 \u003e /tmp/output\n\nnetcat -l 4445 \u003e\u003e /tmp/output\n",
      "dateUpdated": "Sep 30, 2016 7:45:10 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475089658641_1465881023",
      "id": "20160928-190738_20966587",
      "dateCreated": "Sep 28, 2016 7:07:38 AM",
      "dateStarted": "Sep 30, 2016 7:45:11 AM",
      "status": "ABORT",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Sep 30, 2016 7:45:11 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1474910000609_2047522656",
      "id": "20160926-171320_1568505256",
      "dateCreated": "Sep 26, 2016 5:13:20 AM",
      "dateStarted": "Sep 30, 2016 7:45:11 AM",
      "dateFinished": "Sep 30, 2016 7:45:31 AM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Flink Streaming",
  "id": "2BYBGRXZF",
  "angularObjects": {
    "2BXA1AEUD:shared_process": [],
    "2BZW47CUB:shared_process": [],
    "2BZNV4UH7:shared_process": [],
    "2BYDH2AHG:shared_process": [],
    "2BXHF1E7G:shared_process": [],
    "2BYRTADQY:shared_process": [],
    "2BZDSZH17:shared_process": [],
    "2BY5QZBV4:shared_process": [],
    "2BZ8UG4SY:shared_process": [],
    "2BWKBWE15:shared_process": [],
    "2BYBB1N9U:shared_process": [],
    "2BXSN4CKM:shared_process": [],
    "2BW6EGEVA:shared_process": [],
    "2BXT369X9:shared_process": [],
    "2BYPT3Z2J:shared_process": [],
    "2BW24ZS4B:shared_process": [],
    "2BY8JS3PY:shared_process": [],
    "2BZAYSAWP:shared_process": []
  },
  "config": {},
  "info": {}
}